package is207.connectn.gui;

import is207.connectn.game.Game;
import is207.connectn.game.GameException;
import is207.connectn.game.GameParams;
import is207.connectn.game.Player;
import is207.connectn.game.strategy.Strategy;
import is207.connectn.game.strategy.StrategyManager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.AbstractAction;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;



/**
 *
 * @author evenal
 */
public class ConnectNPanel extends JPanel
        implements ActionListener {

    JTextField status;

    JTextField colField, rowField, timeoutField, connLenField;
    GameParams gameParams = new GameParams();
    Game game;
    Board board;
    Player winner = null;

    int delay = 1000; //millisec
    Timer timer;


    public ConnectNPanel() {
        setLayout(new BorderLayout());

        Box menu = Box.createVerticalBox();
        menu.add(new JButton(new PlayGameAction()));

        add(menu, BorderLayout.WEST);

        status = new JTextField();
        add(status, BorderLayout.SOUTH);

        board = new Board(gameParams);
        add(board);
    }


    private void playGame() {
        try {
            Player player1 = setupPlayer(1, Color.RED);
            Player player2 = setupPlayer(2, Color.BLUE);
            game = new Game(gameParams, player1, player2);
            game.addGameStateListener(board);
            board.reset();
            timer = new Timer(delay, this);
            timer.start();
        }
        catch (Exception ie) {
        }

    }


    public void actionPerformed(ActionEvent event) {
        if (game.isGameOver()) {
            winner = game.getWinner();
            if (winner == null)
                status.setText("Draw");
            else
                status.setText("" + winner.getName() + " won!");
            timer.stop();
        }
        else
            try {
                game.makeMove();
            }
            catch (GameException ge) {
            }
        board.repaint();
    }


    private Player setupPlayer(int playerNo, Color colour)
            throws InstantiationException, IllegalAccessException {
        SimpleForm form = new SimpleForm();
        JTextField name = new JTextField("Player" + playerNo);

        StrategyManager stratMgr = StrategyManager.getInstance();
        String[] strategies = stratMgr.getNames();
        JComboBox<String> strategyName = new JComboBox<>(strategies);
        strategyName.setSelectedItem("Random");

        form.addFormField("Name", name);
        form.addComboBox("Strategy", strategyName);

        JOptionPane.showConfirmDialog(null, form);

        String stratname = strategies[strategyName.getSelectedIndex()];
        Strategy strat = stratMgr.getStrategyInstance(stratname);
        strat.setup(gameParams);
        Player p = new Player(name.getText(), colour, strat);
        return p;

    }



    private class PlayGameAction extends AbstractAction {

        public PlayGameAction() {
            super("Play single game...");
        }


        @Override
        public void actionPerformed(ActionEvent e) {
            playGame();
        }
    }
}
