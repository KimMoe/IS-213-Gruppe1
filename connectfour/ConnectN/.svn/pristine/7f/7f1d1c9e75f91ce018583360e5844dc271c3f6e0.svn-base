package is207.connectn.game;

import java.awt.Color;
import java.util.ArrayList;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeoutException;



/**
 * Representation of a player
 *
 * @author evenal
 */
public class Player {

    private String name;
    private Color colour;
    private Strategy strategy;
    ExecutorService exec;
    private String humanName;


    public Player(String name, Color colour, Strategy strategy) {
        this.name = name;
        this.colour = colour;
        this.strategy = strategy;
        exec = Executors.newSingleThreadExecutor();
        humanName = null;
    }


    public int selectMove(int lastMove, ArrayList<Integer> moves)
            throws InterruptedException, ExecutionException, TimeoutException {
        Future<Integer> result = exec.submit(strategy);
        Integer move = result.get(strategy.getTimeout(), strategy.getTimeUnit());
        return move;
    }


    public String getName() {
        return name;
    }


    public String getHumanName() {
        return humanName;
    }


    public void setHumanName(String humanName) {
        this.humanName = humanName;
    }


    public Color getColour() {
        return colour;
    }

}
