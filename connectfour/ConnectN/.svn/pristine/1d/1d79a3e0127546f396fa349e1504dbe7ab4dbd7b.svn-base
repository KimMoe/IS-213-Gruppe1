package is207.connectn.game;

import java.util.concurrent.TimeUnit;



/**
 * Game configuration parameters
 *
 * @author evenal
 */
public class GameParams {

    // default values
    public static final int DEFAULT_ROWS = 6;
    public static final int DEFAULT_COLS = 7;
    public static final int DEFAULT_CONN_LEN = 4;
    public static final int DEFAULT_TIME_LIMIT = 1000;

    private int cols;
    private int rows;
    private int connLen;
    private int timeLimit;
    private TimeUnit timeUnit;


    public GameParams() {
        cols = DEFAULT_COLS;
        rows = DEFAULT_ROWS;
        connLen = DEFAULT_CONN_LEN;
        timeLimit = DEFAULT_TIME_LIMIT;

    }


    public GameParams(int cols, int rows, int connLen,
                      int timeLimit, TimeUnit timeUnit) {
        this.cols = cols;
        this.rows = rows;
        this.connLen = connLen;
        this.timeLimit = timeLimit;
    }


    /**
     * This is the only setter. Intended use is from a game
     * configuration dialog
     *
     * @param cols
     * @param rows
     * @param connLen
     * @param timeLimit
     *
     * @
     */
    public void set(int cols, int rows, int connLen,
                    int timeLimit, TimeUnit timeUnit) {
        this.cols = cols;
        this.rows = rows;
        this.connLen = connLen;
        this.timeLimit = timeLimit;
    }


    public void copy(GameParams that) {
        this.cols = that.cols;
        this.rows = that.rows;
        this.connLen = that.connLen;
        this.timeLimit = that.timeLimit;
    }


    /**
     * Make a clone of the gameParams. Used to give the player
     * strategies a copy of the "official" game params. To prevent
     * cheating by changing the params
     *
     * @return
     */
    public GameParams clone() {
        return new GameParams(rows, cols, connLen, timeLimit, timeUnit);
    }


    public int getTimeLimit() {
        return timeLimit;
    }


    public TimeUnit getTimeUnit() {
        return timeUnit;
    }


    public int getCols() {
        return cols;
    }


    public int getRows() {
        return rows;
    }


    public int getConnLen() {
        return connLen;
    }
}
